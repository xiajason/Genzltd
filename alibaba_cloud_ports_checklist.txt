================================================================================
阿里云多数据库集群安全组配置 - 端口开放清单
================================================================================

📋 需要在阿里云控制台配置的8个端口：

序号 | 端口  | 协议 | 数据库           | 描述
-----|------|------|-----------------|----------------------------------
 1   | 3306 | TCP  | MySQL           | MySQL数据库主从复制和外部访问
 2   | 5432 | TCP  | PostgreSQL      | PostgreSQL数据库流复制和外部访问
 3   | 6379 | TCP  | Redis           | Redis数据库主从复制和外部访问
 4   | 7474 | TCP  | Neo4j           | Neo4j HTTP接口访问
 5   | 7687 | TCP  | Neo4j           | Neo4j Bolt协议连接
 6   | 9200 | TCP  | Elasticsearch   | Elasticsearch HTTP接口访问
 7   | 9300 | TCP  | Elasticsearch   | Elasticsearch节点间通信
 8   | 8080 | TCP  | Weaviate        | Weaviate HTTP接口访问

================================================================================

🔧 配置步骤：

1. 登录阿里云控制台: https://ecs.console.aliyun.com
2. 进入: 网络与安全 > 安全组
3. 找到您的ECS实例对应的安全组
4. 点击 "配置规则" > "入方向"
5. 点击 "添加安全组规则"，逐个添加以上8个端口

================================================================================

📝 每个端口的配置信息：

规则方向: 入方向
授权策略: 允许
协议类型: 自定义TCP
端口范围: [对应端口号]
授权对象: 0.0.0.0/0  (允许所有IP访问)
         或 101.33.251.158/32  (仅允许腾讯云服务器访问，更安全)
优先级: 1
描述: [对应描述]

================================================================================

🔒 安全建议：

推荐配置 (如果只需要跨云同步):
  授权对象: 101.33.251.158/32
  说明: 只允许腾讯云服务器访问，最安全

便捷配置 (如果需要本地管理工具访问):
  授权对象: 0.0.0.0/0
  说明: 允许所有IP访问，已有密码保护，相对安全

================================================================================

✅ 配置完成后验证：

从腾讯云服务器测试连接:
  ssh -i ~/.ssh/basic.pem root@101.33.251.158
  telnet 47.115.168.107 3306   # 测试MySQL
  telnet 47.115.168.107 5432   # 测试PostgreSQL
  telnet 47.115.168.107 6379   # 测试Redis

================================================================================

🎯 注意事项：

1. 确保数据库容器端口绑定到 0.0.0.0，而不是 127.0.0.1
2. 如果服务器内部有防火墙，也需要开放这些端口
3. 所有数据库都已配置密码保护，安全可靠

================================================================================

💾 数据库密码信息（已配置）：

MySQL:      f_mysql_password_2025
PostgreSQL: f_postgres_password_2025
Redis:      f_redis_password_2025
Neo4j:      f_neo4j_password_2025

================================================================================
