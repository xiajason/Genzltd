================================================================================
        GitHub Secrets 可视化配置指南
================================================================================

📍 第一步: 准备信息 (已完成 ✅)
================================================================================

┌─────────────────────────────────────────────────────────────┐
│ Secret 1: TENCENT_CLOUD_USER                                │
│ 值: ubuntu                                                   │
│ ✅ 已确认                                                    │
└─────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────┐
│ Secret 2: TENCENT_CLOUD_SSH_KEY                             │
│ 值: (运行 cat ~/.ssh/basic.pem 获取)                        │
│ ✅ 文件已找到，26行内容                                     │
└─────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────┐
│ Secret 3: TENCENT_DB_PASSWORD                               │
│ 推荐值: jobfirst123                                         │
│ ⚠️ 如果不确定，先用这个试试，失败后可以更新                │
└─────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────┐
│ Secret 4: JWT_SECRET                                        │
│ 值: 4PACMyWp7OZn4zzHuS7uZCqhWgz9OyEyYtpKIdyXKi0=           │
│ ✅ 已生成                                                    │
└─────────────────────────────────────────────────────────────┘

================================================================================
📍 第二步: 在GitHub配置 (请按此操作)
================================================================================

1️⃣ 打开您的GitHub仓库
   ┌─────────────────────────────────────┐
   │  https://github.com/您的用户名/genzltd  │
   └─────────────────────────────────────┘

2️⃣ 点击顶部的 Settings 标签
   ┌───────────────────────────────────────────────┐
   │  Code  Issues  Pull requests  Actions  Projects  Settings  │
   │                                              👆 点这里      │
   └───────────────────────────────────────────────┘

3️⃣ 在左侧菜单找到 Secrets and variables → Actions
   ┌────────────────────────┐
   │  Options               │
   │  ...                   │
   │  Secrets and variables │ 👈 点击展开
   │    ├─ Actions          │ 👈 再点击这个
   │    ├─ Codespaces       │
   │    └─ Dependabot       │
   └────────────────────────┘

4️⃣ 您会看到 "Repository secrets" 页面
   ┌─────────────────────────────────────────────┐
   │  Actions secrets and variables              │
   │  ┌─────────────────────┐                    │
   │  │ New repository secret │ 👈 点击这个按钮   │
   │  └─────────────────────┘                    │
   └─────────────────────────────────────────────┘

5️⃣ 添加每个Secret (重复4次)
   ┌──────────────────────────────────────────────┐
   │  Name *                                      │
   │  ┌────────────────────────────────────────┐  │
   │  │ 输入Secret名称                          │  │
   │  └────────────────────────────────────────┘  │
   │                                              │
   │  Secret *                                    │
   │  ┌────────────────────────────────────────┐  │
   │  │                                        │  │
   │  │ 输入Secret值                            │  │
   │  │                                        │  │
   │  └────────────────────────────────────────┘  │
   │                                              │
   │  ┌──────────────┐                           │
   │  │  Add secret  │ 👈 点击保存               │
   │  └──────────────┘                           │
   └──────────────────────────────────────────────┘

================================================================================
📍 第三步: 按顺序添加4个Secrets
================================================================================

Secret #1 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Name:   TENCENT_CLOUD_USER
Secret: ubuntu
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Secret #2 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Name:   TENCENT_CLOUD_SSH_KEY
Secret: (运行 cat ~/.ssh/basic.pem 然后复制完整输出)

步骤:
  a) 打开本地终端
  b) 运行: cat ~/.ssh/basic.pem
  c) 全选并复制所有内容 (26行)
  d) 粘贴到GitHub的Secret文本框
  e) 确保包含 BEGIN 和 END 行
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Secret #3 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Name:   TENCENT_DB_PASSWORD
Secret: jobfirst123

⚠️ 如果这个密码不对，首次部署会失败
   失败后可以在GitHub更新这个Secret
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Secret #4 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Name:   JWT_SECRET
Secret: 4PACMyWp7OZn4zzHuS7uZCqhWgz9OyEyYtpKIdyXKi0=
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

================================================================================
📍 第四步: 验证配置
================================================================================

配置完成后，Repository secrets 页面应该显示:

┌─────────────────────────────────────────────────────────────┐
│  Repository secrets (4)                                     │
│  ┌─────────────────────┐                                    │
│  │ New repository secret │                                  │
│  └─────────────────────┘                                    │
│                                                             │
│  ✅ TENCENT_CLOUD_USER        Updated now by you           │
│  ✅ TENCENT_CLOUD_SSH_KEY     Updated now by you           │
│  ✅ TENCENT_DB_PASSWORD       Updated now by you           │
│  ✅ JWT_SECRET                Updated now by you           │
└─────────────────────────────────────────────────────────────┘

================================================================================
📍 第五步: 测试CI/CD部署
================================================================================

方法一: 手动触发 (推荐首次使用)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1. 在GitHub仓库点击 "Actions" 标签

┌─────────────────────────────────────────────────────────────┐
│  Code  Issues  Pull requests  Actions  Projects  Settings   │
│                              👆 点这里                        │
└─────────────────────────────────────────────────────────────┘

2. 左侧选择 "Deploy to Tencent Cloud"

┌────────────────────────────┐
│  All workflows             │
│  ├─ Deploy to Alibaba...   │
│  └─ Deploy to Tencent...   │ 👈 点这个
└────────────────────────────┘

3. 右侧点击 "Run workflow"

┌─────────────────────────────────────┐
│  Deploy to Tencent Cloud            │
│  ┌────────────────┐                 │
│  │  Run workflow  │ 👈 点这个按钮    │
│  └────────────────┘                 │
└─────────────────────────────────────┘

4. 选择参数

┌────────────────────────────────────┐
│  Use workflow from                 │
│  Branch: main          ✅          │
│                                    │
│  Environment                       │
│  ○ production  ○ staging           │
│  👆 选择 production                │
│                                    │
│  Services                          │
│  ○ all  ○ zervigo  ○ ai1  ○ ai2  │
│  👆 首次选择 zervigo (测试单个)     │
│                                    │
│  ┌────────────────┐                │
│  │  Run workflow  │ 👈 最后点这里   │
│  └────────────────┘                │
└────────────────────────────────────┘

5. 观察部署过程

┌─────────────────────────────────────────────┐
│  Deploy to Tencent Cloud #1                 │
│  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━   │
│  ⏳ Code Quality and Tests     (运行中)     │
│  ⏳ Deploy Zervigo            (等待中)      │
│  ⏳ Deploy AI Service 1       (等待中)      │
│  ⏳ Deploy AI Service 2       (等待中)      │
│  ⏳ Deploy LoomaCRM           (等待中)      │
│  ⏳ Final Health Check        (等待中)      │
│  ⏳ Deployment Notification   (等待中)      │
└─────────────────────────────────────────────┘

等待约10-15分钟后...

┌─────────────────────────────────────────────┐
│  Deploy to Tencent Cloud #1                 │
│  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━   │
│  ✅ Code Quality and Tests     (成功)       │
│  ✅ Deploy Zervigo             (成功)       │
│  ⏭️ Deploy AI Service 1       (跳过)       │
│  ⏭️ Deploy AI Service 2       (跳过)       │
│  ⏭️ Deploy LoomaCRM           (跳过)       │
│  ✅ Final Health Check         (成功)       │
│  ✅ Deployment Notification    (成功)       │
└─────────────────────────────────────────────┘

================================================================================
📍 第六步: 验证Zervigo部署成功
================================================================================

SSH连接腾讯云检查:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ssh -i ~/.ssh/basic.pem ubuntu@101.33.251.158

# 检查服务进程
ps aux | grep unified-auth

# 检查健康状态
curl http://localhost:8207/health

# 查看日志
tail -50 /opt/services/zervigo/logs/zervigo.log

================================================================================
🎉 成功标志
================================================================================

如果看到以下内容，说明部署成功:
  ✅ GitHub Actions显示绿色对勾
  ✅ curl命令返回健康状态
  ✅ 进程正在运行
  ✅ 日志没有错误

下一步:
  🚀 继续部署其他服务 (AI1, AI2, LoomaCRM)
  🚀 或者先观察Zervigo运行一段时间
  🚀 确认稳定后再部署其他服务

================================================================================
