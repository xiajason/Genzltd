services:
  # ==================== 基础设施层 ====================
  
  # MySQL数据库 (基础服务)
  mysql:
    image: mysql:8.0
    container_name: jobfirst-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=jobfirst_password_2024
      - MYSQL_DATABASE=jobfirst
      - MYSQL_USER=jobfirst
      - MYSQL_PASSWORD=jobfirst_password_2024
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/mysql/conf.d:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s
    restart: unless-stopped
    networks:
      - jobfirst-network

  # Redis缓存 (基础服务)
  redis:
    image: redis:7-alpine
    container_name: jobfirst-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./database/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
      interval: 10s
      start_period: 10s
    restart: unless-stopped
    networks:
      - jobfirst-network

  # PostgreSQL数据库 (AI服务使用)
  postgres:
    image: registry.cn-hangzhou.aliyuncs.com/library/postgres:14-alpine
    container_name: jobfirst-postgres
    environment:
      - POSTGRES_DB=jobfirst_ai
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=jobfirst_password_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      timeout: 5s
      retries: 5
      interval: 10s
      start_period: 20s
    restart: unless-stopped
    networks:
      - jobfirst-network

  # Neo4j图数据库 (关系网络和智能推荐)
  neo4j:
    image: registry.cn-hangzhou.aliyuncs.com/library/neo4j:latest
    container_name: jobfirst-neo4j
    environment:
      - NEO4J_AUTH=neo4j/jobfirst_password_2024
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./database/neo4j/graph_upgrade.cypher:/var/lib/neo4j/import/graph_upgrade.cypher
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "jobfirst_password_2024", "RETURN 1"]
      timeout: 10s
      retries: 5
      interval: 15s
      start_period: 30s
    restart: unless-stopped
    networks:
      - jobfirst-network

  # ==================== 服务发现层 ====================
  
  # Consul服务发现
  consul:
    image: registry.cn-hangzhou.aliyuncs.com/library/consul:latest
    container_name: jobfirst-consul
    ports:
      - "8650:8500"
      - "8600:8600/udp"
    volumes:
      - ./consul/config/consul.json:/consul/config/consul.json
      - consul_data:/consul/data
    command: consul agent -config-file=/consul/config/consul.json
    healthcheck:
      test: ["CMD", "consul", "members"]
      timeout: 5s
      retries: 5
      interval: 10s
      start_period: 20s
    restart: unless-stopped
    networks:
      - jobfirst-network

  # ==================== 核心服务层 ====================
  
  # JobFirst后端服务 (API Gateway)
  basic-server:
    image: jobfirst-backend:latest
    container_name: jobfirst-backend
    ports:
      - "8601:8601"
    environment:
      - GIN_MODE=release
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=jobfirst_password_2024
      - DB_NAME=jobfirst
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - JWT_SECRET=jobfirst_jwt_secret_2024
      - AI_SERVICE_URL=http://ai-service:8000
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./temp:/app/temp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 60s
    restart: unless-stopped
    networks:
      - jobfirst-network

  # ==================== 业务服务层 ====================
  
  # API Gateway服务
  api-gateway:
    image: jobfirst-api-gateway:latest
    container_name: jobfirst-api-gateway
    ports:
      - "8601:8601"
    environment:
      - GIN_MODE=release
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=jobfirst_password_2024
      - DB_NAME=jobfirst
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
      basic-server:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 60s
    restart: unless-stopped
    networks:
      - jobfirst-network

  # 用户服务
  user-service:
    image: jobfirst-user-service:latest
    container_name: jobfirst-user-service
    ports:
      - "8602:8602"
    environment:
      - GIN_MODE=release
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=jobfirst_password_2024
      - DB_NAME=jobfirst
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
      basic-server:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 60s
    restart: unless-stopped
    networks:
      - jobfirst-network

  # ==================== AI服务层 ====================
  
  # AI服务
  ai-service:
    image: jobfirst-ai-service:latest
    container_name: jobfirst-ai-service
    ports:
      - "8620:8620"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://postgres:jobfirst_password_2024@postgres:5432/jobfirst_ai
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
      basic-server:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8620/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 90s
    restart: unless-stopped
    networks:
      - jobfirst-network

  # ==================== 前端层 ====================
  
  # Nginx反向代理
  nginx:
    image: registry.cn-hangzhou.aliyuncs.com/library/nginx:alpine
    container_name: jobfirst-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      basic-server:
        condition: service_healthy
      user-service:
        condition: service_healthy
      resume-service:
        condition: service_healthy
      ai-service:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - jobfirst-network

  # 前端服务（Taro构建后的静态文件）
  frontend:
    image: registry.cn-hangzhou.aliyuncs.com/library/nginx:alpine
    container_name: jobfirst-frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend-taro/dist:/usr/share/nginx/html
      - ./nginx/frontend.conf:/etc/nginx/conf.d/default.conf
    # 前端服务独立部署，不依赖后端服务
    restart: unless-stopped
    networks:
      - jobfirst-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  consul_data:
    driver: local

networks:
  jobfirst-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16