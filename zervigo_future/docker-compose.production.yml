services:
  # ==================== 基础设施层 (仅内部访问) ====================
  
  # MySQL数据库
  mysql:
    image: registry.cn-hangzhou.aliyuncs.com/library/mysql:8.0
    container_name: jobfirst-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=jobfirst_password_2024
      - MYSQL_DATABASE=jobfirst
      - MYSQL_USER=jobfirst
      - MYSQL_PASSWORD=jobfirst_password_2024
    # 移除外部端口暴露，仅内部访问
    expose:
      - "3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/mysql/conf.d:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s
    restart: unless-stopped
    networks:
      - jobfirst-internal

  # Redis缓存
  redis:
    image: registry.cn-hangzhou.aliyuncs.com/library/redis:7-alpine
    container_name: jobfirst-redis
    # 移除外部端口暴露，仅内部访问
    expose:
      - "6379"
    volumes:
      - redis_data:/data
      - ./database/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
      interval: 10s
      start_period: 10s
    restart: unless-stopped
    networks:
      - jobfirst-internal

  # PostgreSQL数据库
  postgres:
    image: registry.cn-hangzhou.aliyuncs.com/library/postgres:14-alpine
    container_name: jobfirst-postgres
    environment:
      - POSTGRES_DB=jobfirst_ai
      - POSTGRES_USER=jobfirst
      - POSTGRES_PASSWORD=jobfirst_password_2024
    # 移除外部端口暴露，仅内部访问
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobfirst"]
      timeout: 5s
      retries: 5
      interval: 10s
      start_period: 30s
    restart: unless-stopped
    networks:
      - jobfirst-internal

  # Neo4j图数据库
  neo4j:
    image: registry.cn-hangzhou.aliyuncs.com/library/neo4j:latest
    container_name: jobfirst-neo4j
    environment:
      - NEO4J_AUTH=neo4j/jobfirst_password_2024
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    # 移除外部端口暴露，仅内部访问
    expose:
      - "7474"
      - "7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./database/neo4j/graph_upgrade.cypher:/var/lib/neo4j/import/graph_upgrade.cypher
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "jobfirst_password_2024", "RETURN 1"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 60s
    restart: unless-stopped
    networks:
      - jobfirst-internal

  # Consul服务发现
  consul:
    image: registry.cn-hangzhou.aliyuncs.com/library/consul:latest
    container_name: jobfirst-consul
    command: agent -server -bootstrap-expect=1 -client=0.0.0.0 -ui -bind=0.0.0.0
    # 移除外部端口暴露，仅内部访问
    expose:
      - "8500"
      - "8600"
    volumes:
      - consul_data:/consul/data
    healthcheck:
      test: ["CMD", "consul", "members"]
      timeout: 3s
      retries: 5
      interval: 10s
      start_period: 30s
    restart: unless-stopped
    networks:
      - jobfirst-internal

  # ==================== 业务服务层 (仅内部访问) ====================
  
  # 用户服务
  user-service:
    image: jobfirst-user-service:latest
    container_name: jobfirst-user-service
    # 移除外部端口暴露，仅内部访问
    expose:
      - "8081"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=jobfirst
      - DB_USER=jobfirst
      - DB_PASSWORD=jobfirst_password_2024
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      timeout: 5s
      retries: 3
      interval: 30s
      start_period: 60s
    restart: unless-stopped
    networks:
      - jobfirst-internal

  # 简历服务
  resume-service:
    image: jobfirst-resume-service:latest
    container_name: jobfirst-resume-service
    # 移除外部端口暴露，仅内部访问
    expose:
      - "8082"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=jobfirst
      - DB_USER=jobfirst
      - DB_PASSWORD=jobfirst_password_2024
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      timeout: 5s
      retries: 3
      interval: 30s
      start_period: 60s
    restart: unless-stopped
    networks:
      - jobfirst-internal

  # AI服务
  ai-service:
    image: jobfirst-ai-service:latest
    container_name: jobfirst-ai-service
    # 移除外部端口暴露，仅内部访问
    expose:
      - "8000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=jobfirst_ai
      - POSTGRES_USER=jobfirst
      - POSTGRES_PASSWORD=jobfirst_password_2024
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    depends_on:
      postgres:
        condition: service_healthy
      consul:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      timeout: 5s
      retries: 3
      interval: 30s
      start_period: 60s
    restart: unless-stopped
    networks:
      - jobfirst-internal

  # 主后端服务 (API网关)
  basic-server:
    image: jobfirst-backend:latest
    container_name: jobfirst-backend
    # 移除外部端口暴露，仅内部访问
    expose:
      - "8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=jobfirst
      - DB_USER=jobfirst
      - DB_PASSWORD=jobfirst_password_2024
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - USER_SERVICE_URL=http://user-service:8081
      - RESUME_SERVICE_URL=http://resume-service:8082
      - AI_SERVICE_URL=http://ai-service:8000
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
      user-service:
        condition: service_healthy
      resume-service:
        condition: service_healthy
      ai-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      timeout: 5s
      retries: 3
      interval: 30s
      start_period: 60s
    restart: unless-stopped
    networks:
      - jobfirst-internal

  # ==================== 网关层 (外部访问) ====================
  
  # Nginx反向代理
  nginx:
    image: registry.cn-hangzhou.aliyuncs.com/library/nginx:alpine
    container_name: jobfirst-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./frontend-taro/dist:/usr/share/nginx/html
    depends_on:
      basic-server:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - jobfirst-internal
      - jobfirst-external

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  consul_data:
    driver: local

networks:
  jobfirst-internal:
    driver: bridge
    internal: true  # 内部网络，不允许外部访问
  jobfirst-external:
    driver: bridge
